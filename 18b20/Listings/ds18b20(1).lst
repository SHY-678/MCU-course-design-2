C51 COMPILER V9.54   DS18B20                                                               11/30/2020 13:04:00 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\Objects\ds18b20.obj
COMPILER INVOKED BY: E:\keil 5 mdk\C51\BIN\C51.EXE ds18b20.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\ds18b20.lst) OBJECT(.\Objects\ds18b20.obj)

line level    source

   1          /*ds18b20驱动
   2          **@CTBU^Shy^
   3          **$version:v1.0
   4          **#chinese_coding_standard:GB2312
   5          */
   6          #include "ds18b20.h"
   7          #include <reg52.h>
   8          #include <intrins.h>
   9          //***********************************************************************
  10          sbit dq = P3^6;                         //ds18b20数据总线接口
  11          
  12          //***********************************************************************
  13          /*x10us延时
  14          **count:延时 10 x count us
  15          */
  16          void delay10us(unsigned char count)
  17          {
  18   1              while (count--)
  19   1              {
  20   2                      _nop_();
  21   2                      _nop_();
  22   2              }
  23   1      }
  24          //***********************************************************************
  25          /*ds18b20初始化_查询存在状态
  26          **void
  27          */
  28          bit ds18b20_init(void)
  29          {
  30   1              bit response = 1;        //ds18b20应答标识 0存在 1不存在
  31   1              
  32   1              dq = 0;                          //复位
  33   1              delay10us(48);
  34   1              
  35   1              dq = 1;                          //释放总线，准备接收存在脉冲
  36   1              delay10us(5);            //等待ds18b20返回存在脉冲
  37   1              response = dq;           //接收存在信号
  38   1              delay10us(43);           //释放总线结束
  39   1              
  40   1              return response;
  41   1      }
  42          //***********************************************************************
  43          /*ds18b20写一个字节数据
  44          **dat:要写入的8位数据
  45          */      
  46          void ds18b20_write_byte(unsigned char dat)
  47          {
  48   1              unsigned char i = 0;
  49   1              for(i = 0;i < 8;i++)
  50   1              {
  51   2                      dq = 0;
  52   2                      _nop_();
  53   2                      _nop_();
  54   2                      dq = dat&0x01;          //从低位开始传
C51 COMPILER V9.54   DS18B20                                                               11/30/2020 13:04:00 PAGE 2   

  55   2                      delay10us(6);
  56   2                      dq = 1;
  57   2                      _nop_();
  58   2                      dat>>=1;
  59   2              }
  60   1      }
  61          //***********************************************************************
  62          /*ds18b20读一个字节数据
  63          **void
  64          **返回读取到的8位数据
  65          */      
  66          unsigned char ds18b20_read_byte(void)
  67          {
  68   1              unsigned char i = 0;
  69   1              unsigned char dat = 0;
  70   1              for(i = 0;i < 8;i++)
  71   1              {
  72   2                      dat>>=1;
  73   2                      dq = 0;
  74   2                      _nop_();
  75   2                      _nop_();
  76   2                      dq = 1;
  77   2                      if(dq)
  78   2                              dat |= 0x80;    //从低位开始读
  79   2                      delay10us(6);
  80   2              }
  81   1              return dat;
  82   1      }
  83          //***********************************************************************
  84          /*ds18b20精度控制
  85          **level：1-4 对应0.5 0.25 0.125 0.0625精度
  86          */      
  87          void ds18b20_precision_set(unsigned char level)
  88          {
  89   1              ds18b20_init();                                    //初始化DS18B20
  90   1              ds18b20_write_byte(0xcc);                  //跳过rom
  91   1              ds18b20_write_byte(0x4e);                  //写暂存器
  92   1              ds18b20_write_byte(0x63);                  //TH 99
  93   1              ds18b20_write_byte(0x00);                  //TL 0
  94   1              switch(level)   //精度控制
  95   1              {
  96   2                      case 1:         //0x1f : 0.5000  93.75ms
  97   2                              ds18b20_write_byte(0x1f);
  98   2                              break;
  99   2                      case 2:         //0x3f : 0.2500  187.5ms
 100   2                              ds18b20_write_byte(0x3f);
 101   2                              break;
 102   2                      case 3:         //0x5f : 0.1250  375ms
 103   2                              ds18b20_write_byte(0x5f);
 104   2                              break;
 105   2                      case 4:         //0x7f : 0.0625  750ms
 106   2                              ds18b20_write_byte(0x7f);
 107   2                              break;
 108   2                      default:
 109   2                              ds18b20_write_byte(0x7f);
 110   2                              break;
 111   2              }                                       
 112   1      }
 113          //***********************************************************************
 114          /*ds18b20读取温度
 115          **void
 116          **放大100倍的温度
C51 COMPILER V9.54   DS18B20                                                               11/30/2020 13:04:00 PAGE 3   

 117          */      
 118          int ds18b20_read_temperature(void)
 119          {
 120   1              int temperature = 0;
 121   1              unsigned char lsb,msb;
 122   1              float f_temperature;
 123   1              
 124   1              ds18b20_init();
 125   1              ds18b20_write_byte(0xcc);               //跳过rom
 126   1              ds18b20_write_byte(0x44);               //启动一次温度转换
 127   1              
 128   1              ds18b20_init();
 129   1              ds18b20_write_byte(0xcc);               //跳过rom
 130   1              ds18b20_write_byte(0xbe);               //读寄存器
 131   1              lsb = ds18b20_read_byte();              //低8位
 132   1              msb = ds18b20_read_byte();              //高8位
 133   1              
 134   1              temperature |= msb;                     //高8位
 135   1              temperature<<=8;
 136   1              temperature |= lsb;                     //低8位
 137   1              
 138   1              f_temperature = temperature * 0.0625;
 139   1              temperature = f_temperature * 100;
 140   1              
 141   1              return temperature;
 142   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    261    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
